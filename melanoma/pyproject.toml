[tool.poetry]
name = "melanoma"
version = "0.1.0"
description = "Melanoma ingestion system for Bionocular organization"
authors = ["Bionocular Team <team@bionocular.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = "^2.5.0"
sqlalchemy = "^2.0.23"
psycopg2-binary = "^2.9.9"
pypdf2 = "^3.0.1"
pdfplumber = "^0.10.3"
python-multipart = "^0.0.6"
python-dotenv = "^1.0.0"
alembic = "^1.12.1"
marker-pdf = "1.8.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
black = "^23.11.0"
ruff = "^0.1.6"
mypy = "^1.7.1"
bandit = "^1.7.5"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.poetry.scripts]
# Development tasks
dev-install = "scripts.dev:install_dependencies"
dev-test = "scripts.dev:run_tests"
dev-test-cov = "scripts.dev:run_tests_with_coverage"
dev-lint = "scripts.dev:run_linting"
dev-format = "scripts.dev:format_code"
dev-type-check = "scripts.dev:run_type_checking"
dev-quality = "scripts.dev:run_all_quality_checks"
dev-build = "scripts.dev:build_project"
dev-run = "scripts.dev:run_application"
dev-db-init = "scripts.dev:initialize_database"
dev-clean = "scripts.dev:clean_project"

# CI/CD tasks
ci-test = "scripts.ci:run_ci_tests"
ci-build = "scripts.ci:build_for_ci"
ci-deploy = "scripts.ci:deploy_project"
