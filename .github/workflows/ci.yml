name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: melanoma/.venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('melanoma/poetry.lock') }}
    
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      working-directory: ./melanoma
      run: poetry install --no-interaction --no-root
    
    - name: Install dependencies (cached)
      if: steps.cached-poetry-dependencies.outputs.cache-hit == 'true'
      working-directory: ./melanoma
      run: poetry install --no-interaction --no-root
    
    - name: Lint with ruff
      working-directory: ./melanoma
      run: poetry run ruff check src/ tests/
    
    - name: Format check with black
      working-directory: ./melanoma
      run: poetry run black --check src/ tests/
    
    - name: Type check with mypy
      working-directory: ./melanoma
      run: poetry run mypy src/
    
    - name: Run tests with pytest
      working-directory: ./melanoma
      run: poetry run pytest tests/ --cov=src --cov-report=xml --cov-report=html
    
    - name: Security audit with bandit
      working-directory: ./melanoma
      run: poetry run bandit -r src/ -f json -o bandit-report.json || true
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./melanoma/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Install dependencies
      working-directory: ./melanoma
      run: poetry install --no-interaction --no-root
    
    - name: Build package
      working-directory: ./melanoma
      run: poetry build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: melanoma/dist/
